# Prizm Bets Environment Configuration

# The Odds API Configuration
# Get your FREE API key from: https://the-odds-api.com/
# Includes 10,000 requests/month for free
ODDS_API_KEY=your_odds_api_key_here
ODDS_API_BASE_URL=https://api.the-odds-api.com/v4
ODDS_API_TIMEOUT=10

# API-Sports Configuration  
# Get your API key from: https://rapidapi.com/api-sports
# Multiple sports endpoints available
APISPORTS_KEY=your_apisports_key_here
APISPORTS_TIMEOUT=15

# Sports Data Provider Settings
USE_ODDS_API=true
USE_APISPORTS=true
PREFER_LIVE_SCORES=apisports
PREFER_ODDS_DATA=theoddsapi

# Flask Configuration
FLASK_ENV=development
FLASK_DEBUG=True
SECRET_KEY=your-secret-key-change-in-production

# JWT Configuration
JWT_SECRET_KEY=your-jwt-secret-key-change-in-production

# Database Configuration (for future use)
DATABASE_URL=sqlite:///prizmbets.db

# CORS Configuration
ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Security Configuration
API_RATE_LIMIT=100

# Redis Configuration (for caching - optional)
REDIS_URL=redis://localhost:6379/0

# ============================================
# STRIPE CONFIGURATION
# ============================================
# Use test keys for development, production keys for live
# Get your keys from: https://dashboard.stripe.com/test/apikeys

STRIPE_SECRET_KEY=sk_test_YOUR_STRIPE_SECRET_KEY_HERE
STRIPE_PUBLISHABLE_KEY=pk_test_YOUR_STRIPE_PUBLISHABLE_KEY_HERE
STRIPE_WEBHOOK_SECRET=whsec_YOUR_WEBHOOK_SECRET_HERE

# Subscription Price IDs (create in Stripe Dashboard > Products)
STRIPE_PRO_PRICE_ID=price_YOUR_PRO_SUBSCRIPTION_PRICE_ID
STRIPE_PREMIUM_PRICE_ID=price_YOUR_PREMIUM_SUBSCRIPTION_PRICE_ID

# ============================================
# BUSINESS BANK ACCOUNT SETUP (When Ready)
# ============================================
# 1. Log into Stripe Dashboard: https://dashboard.stripe.com
# 2. Go to Settings > Bank accounts and scheduling
# 3. Click "Add bank account"
# 4. Enter your business bank account details:
#    - Routing number
#    - Account number
#    - Business name (as it appears on bank account)
# 5. Verify the account with micro-deposits (takes 1-2 days)
# 6. Set as default payout account
# 
# Note: You can start with test mode now and add the bank account later!

# ============================================
# EMAIL CONFIGURATION
# ============================================
# Configure email service for user communications

# Gmail SMTP (Recommended for development)
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USE_SSL=false
MAIL_USERNAME=your-email@gmail.com
MAIL_PASSWORD=your-app-specific-password
MAIL_DEFAULT_SENDER=your-email@gmail.com

# Email settings
MAIL_MAX_EMAILS=50
MAIL_SUPPRESS_SEND=false

# Gmail Setup Instructions:
# 1. Enable 2-factor authentication on your Gmail account
# 2. Generate an App Password: https://myaccount.google.com/apppasswords
# 3. Use the App Password (not your regular Gmail password) in MAIL_PASSWORD
# 
# Production alternatives:
# - SendGrid: MAIL_SERVER=smtp.sendgrid.net, MAIL_PORT=587
# - Mailgun: MAIL_SERVER=smtp.mailgun.org, MAIL_PORT=587
# - AWS SES: MAIL_SERVER=email-smtp.us-east-1.amazonaws.com, MAIL_PORT=587

# ============================================
# SENTRY CONFIGURATION (Error Monitoring)
# ============================================
# Get your DSN from: https://sentry.io/organizations/your-org/projects/
# Sentry provides real-time error tracking and performance monitoring

SENTRY_DSN=your_sentry_dsn_here

# Only enable Sentry in production/staging
# Development errors will be logged to console as usual
# Set APP_VERSION to track which version errors occur in
APP_VERSION=2.0.0